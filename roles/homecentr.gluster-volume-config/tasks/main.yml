---
- name: Probe cluster nodes
  run_once: true
  gluster_peer:
    state: present
    nodes: "{{ play_hosts }}"

- name: Create config volume bricks directories
  file:
    path: "{{ brick_root_path }}/{{ gluster_config_volume_name }}/b1"
    state: directory
    mode: 0771
    owner: root
    group: root

- name: "Check if config volume already exists"
  run_once: true
  command: 'gluster volume list'
  register: check_volume
  changed_when: gluster_config_volume_name not in check_volume.stdout

- name: "Create config volume"
  run_once: true
  command: "gluster volume create {{ gluster_config_volume_name }} replica {{ play_hosts | count }} {{ play_hosts | map('regex_replace', '^(.*)$', '\\1:'+ brick_root_path +'/'+ gluster_config_volume_name +'/b1') | join(' ') }}{% if gluster_config_force %} force{% endif %}"
  when: check_volume.changed

- name: "Check if config volume already started"
  run_once: true
  command: 'gluster volume info {{ gluster_config_volume_name }}'
  register: check_volume_started
  ignore_errors: yes
  changed_when: "'Status: Started' not in check_volume_started.stdout"

- name: "Start config volume"
  run_once: true
  command: "gluster volume start {{ gluster_config_volume_name }}"
  when: check_volume_started.changed

- name: Ensure Gluster volume is mounted.
  mount:
    src: "{{ inventory_hostname }}:/{{ gluster_config_volume_name }}"
    path: "/mnt/gfs/{{ gluster_config_volume_name }}"
    fstype: glusterfs
    opts: "defaults,_netdev"
    state: mounted